pipeline {
  environment {
    registry = "vinodgowda417/pipeline-test"
    registryCredential = 'dockerhub'
    dockerImage = ''
  }
  agent any
  stages {
    stage('Cloning Git') {
      steps {
        git 'https://github.com/vinodgowda1477/elotl-sonarqube.git'
      }
    }
    
   stage('SonarQube analysis') {
   steps { script {   
  def scannerHome = tool 'SonarQube Scanner 2.11';
  withSonarQubeEnv('elotl') {
    sh "/opt/sonarscanner/sonar-scanner-3.2.0.1227-linux"
  }
}
}
}
    stage('Building image') {
      steps{
        script {
          dockerImage = docker.build registry + ":$BUILD_NUMBER"
        }
      }
    }
    stage('push Image') {
        agent any
	steps{ script {
	withCredentials([usernamePassword(credentialsId: 'dockerhub', passwordVariable: 'dockerHubPassword', usernameVariable: 'dockerHubUser')]) {
          sh "docker login -u ${env.dockerHubUser} -p ${env.dockerHubPassword}"
	  dockerImage.push()
        }
	}
      }
    }
    stage('Remove Unused docker image') {
      steps{
        sh "docker rmi $registry:$BUILD_NUMBER"
      }
    }
  }
}

